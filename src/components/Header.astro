---
// src/components/Header.astro (Versão Final com Script Robusto)
const { pathname } = Astro.url;
---
<header class="main-header">
    <nav class="container">
        <a href="/" class="logo">
            <span class="elo">ELO</span><span class="n">n</span><span class="arte">ARTE</span>
        </a>

        <div class="desktop-nav-group">
            <div class="nav-links">
                <a href="/" class:list={{ active: pathname === '/' }}>Início</a>
                <a href="/servicos" class:list={{ active: pathname === '/servicos' || pathname.startsWith('/servicos/') }}>Serviços</a>
                <a href="/sobre" class:list={{ active: pathname === '/sobre' || pathname.startsWith('/sobre/') }}>Sobre</a>
                <a href="/blog" class:list={{ active: pathname === '/blog' || pathname.startsWith('/blog/') }}>Blog</a>
                <a href="/contato" class:list={{ active: pathname === '/contato' }}>Contato</a>
            </div>
        </div>

        <button id="mobile-menu-button" class="mobile-menu-button" aria-label="Abrir menu" aria-expanded="false">
            <svg class="mobile-menu-icon" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16m-7 6h7"></path></svg>
            <svg class="mobile-close-icon" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path></svg>
        </button>
    </nav>
</header>

<div id="mobile-menu" class="mobile-nav">
    <a href="/">Início</a>
    <a href="/servicos">Serviços</a>
    <a href="/sobre">Sobre</a>
    <a href="/blog">Blog</a>
    <a href="/contato">Contato</a>
</div>

<script>
    function initMobileMenu() {
        const menuButton = document.getElementById('mobile-menu-button');
        const mobileMenu = document.getElementById('mobile-menu');
        const body = document.body;

        if (!menuButton || !mobileMenu) {
            // Se os elementos não forem encontrados, não faz nada.
            return;
        }

        // Função para fechar o menu
        const closeMenu = () => {
            menuButton.setAttribute('aria-expanded', 'false');
            mobileMenu.classList.remove('is-open');
            body.classList.remove('no-scroll');
        };

        // Função para alternar o menu
        const toggleMenu = () => {
            const isExpanded = menuButton.getAttribute('aria-expanded') === 'true';
            menuButton.setAttribute('aria-expanded', String(!isExpanded));
            mobileMenu.classList.toggle('is-open');
            body.classList.toggle('no-scroll');
        };

        // Adiciona o evento de clique ao botão principal
        menuButton.addEventListener('click', toggleMenu);

        // Adiciona o evento de clique a cada link do menu para fechá-lo
        const mobileNavLinks = mobileMenu.querySelectorAll('a');
        mobileNavLinks.forEach(link => {
            link.addEventListener('click', closeMenu);
        });
    }

    // Executa a função na primeira carga da página E após cada transição do Astro
    document.addEventListener('astro:page-load', initMobileMenu);
</script>

<style>
    /* O CSS permanece o mesmo. Nenhuma alteração de estilo foi necessária. */
    .main-header {
        background-color: rgba(15, 23, 42, .8);
        backdrop-filter: blur(8px);
        position: sticky;
        top: 0;
        z-index: 100;
        border-bottom: 1px solid var(--color-bg-light);
    }
    .container {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding-top: 1rem;
        padding-bottom: 1rem;
        max-width: 1100px;
        margin: auto;
        padding-left: 1.5rem;
        padding-right: 1.5rem;
    }
    .logo {
        font-size: 1.75rem;
        font-weight: 700;
        text-decoration: none;
        color: #fff;
    }
    .logo .elo { color: #08F7FE; } /* Neon Turquesa */
    .logo .n { color: #9D48FF; } /* Neon Roxo Laser */ 
    .logo .arte { color: #FF79F2; } /* Neon Rosa Chiclete */

    .desktop-nav-group { display: none; }
    .mobile-menu-button { display: block; }

    @media (min-width: 768px) {
        .desktop-nav-group {
            display: flex;
            align-items: center;
            gap: 2rem;
        }
        .mobile-menu-button {
            display: none;
        }
    }

    .nav-links { display: flex; gap: 1rem; }
    .nav-links a { color: var(--color-text-secondary); text-decoration: none; padding: 0.5rem 0.25rem; transition: color 0.3s ease; position: relative; border-bottom: 2px solid transparent; }
    .nav-links a:hover { color: #fff; }
    .nav-links a.active { color: #fff; font-weight: 700; border-bottom-color: var(--accent-lilac); }

    .mobile-menu-button {
        position: relative;
        z-index: 101;
        cursor: pointer;
        width: 28px;
        height: 28px;
        background: none;
        border: none;
        padding: 0;
    }
    .mobile-menu-icon, .mobile-close-icon { position: absolute; inset: 0; color: white; transition: opacity 0.2s ease, transform 0.2s ease; }
    .mobile-close-icon { opacity: 0; transform: rotate(-90deg); }
    .mobile-menu-button[aria-expanded="true"] .mobile-menu-icon { opacity: 0; transform: rotate(90deg); }
    .mobile-menu-button[aria-expanded="true"] .mobile-close-icon { opacity: 1; transform: rotate(0deg); }
    
    .mobile-nav {
        position: fixed;
        inset: 0;
        padding-top: 6rem;
        background-color: rgba(15, 23, 42, 0.98);
        backdrop-filter: blur(8px);
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        gap: 1rem;
        opacity: 0;
        transform: translateY(-100%);
        transition: transform 0.35s ease-in-out, opacity 0.35s ease-in-out;
        z-index: 99;
        pointer-events: none;
    }
    .mobile-nav.is-open {
        transform: translateY(0);
        opacity: 1;
        pointer-events: auto;
    }
    :global(body.no-scroll) {
        overflow: hidden;
    }

    .mobile-nav a { padding: 1rem 1.5rem; color: var(--color-text-primary); text-decoration: none; font-size: 1.5rem; }
    .mobile-search-trigger { display: inline-flex; align-items: center; justify-content: center; gap: 0.5rem; }
</style>