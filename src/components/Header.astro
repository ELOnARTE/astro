---
// src/components/Header.astro

// Vamos reintroduzir a constante SITE_TITLE para o logo, uma boa prática do template.
// Certifique-se de que o arquivo src/consts.ts existe e exporta SITE_TITLE.
// Se não, pode substituir {SITE_TITLE} por "ELOnARTE" no HTML abaixo.
import { SITE_TITLE } from '../consts';

// Pega o caminho da URL atual para destacar o link ativo
const pathname = Astro.url.pathname;
---

<header class="main-header">
    <nav class="container">
        {/* O logo agora usa SITE_TITLE e sempre aponta para a página inicial */}
        <a href="/" class="logo" title={`Ir para a página inicial de ${SITE_TITLE}`}>
            <span class="elo">ELO</span><span class="n">n</span><span class="arte">ARTE</span>
        </a>

        {/* NAVEGAÇÃO HÍBRIDA */}
        <div class="nav-links">
            {/* Links para seções na PÁGINA INICIAL */}
            <a href="/#artes-digitais">Serviços</a>
            <a href="/#contato">Contato</a>

            {/* Links para outras PÁGINAS */}
            <a href="/blog" class:list={{ active: pathname.startsWith('/blog') }}>
                Blog
            </a>
            <a href="/about" class:list={{ active: pathname === '/about' }}>
                Sobre
            </a>
        </div>

        <button class="mobile-menu-button" id="mobile-menu-button" aria-label="Abrir menu" aria-expanded="false">
            <svg class="mobile-menu-icon" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16m-7 6h7"></path>
            </svg>
        </button>
    </nav>
    
    {/* O menu mobile também terá os links híbridos */}
    <div class="mobile-nav" id="mobile-menu">
        <a href="/#artes-digitais">Serviços</a>
        <a href="/#contato">Contato</a>
        <a href="/blog">Blog</a>
        <a href="/about">Sobre</a>
    </div>
</header>

<style>
    /* Todos os estilos do cabeçalho ELOnARTE que já tínhamos */
    .main-header {
        background-color: rgba(15, 23, 42, .8);
        backdrop-filter: blur(8px);
        position: sticky;
        top: 0;
        z-index: 100;
        border-bottom: 1px solid var(--color-bg-light);
    }
    .main-header nav {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding-top: 1rem;
        padding-bottom: 1rem;
    }
    .logo {
        font-size: 1.75rem;
        font-weight: 700;
        text-decoration: none;
        color: #fff;
    }
    .logo .elo { color: var(--accent-turquoise); }
    .logo .n { color: var(--accent-lilac); }
    .logo .arte { color: var(--accent-lightpink); }
    
    .nav-links a {
        color: var(--color-text-primary);
        text-decoration: none;
        padding: .5rem 1rem;
        transition: color .3s ease, border-bottom-color .3s ease;
        border-bottom: 2px solid transparent;
    }
    .nav-links a:hover {
        color: #fff;
    }
    
    /* ESTILO ADICIONADO: Destaque visual para o link da página ativa */
    .nav-links a.active {
        color: #fff;
        border-bottom-color: var(--accent-turquoise);
    }

    .mobile-menu-button {
        display: none;
        background: transparent;
        border: none;
        color: #fff;
        cursor: pointer;
    }
    .mobile-menu-icon { width: 28px; height: 28px; }
    
    .mobile-nav { display: none; background-color: var(--color-bg-light); }
    .mobile-nav a {
        display: block;
        padding: 1rem 1.5rem;
        color: var(--color-text-primary);
        text-decoration: none;
    }
    .mobile-nav.is-open { display: block; }

    @media (max-width: 768px) {
        .nav-links { display: none; }
        .mobile-menu-button { display: block; }
    }
</style>

<script>
    // O script do menu mobile permanece o mesmo, sem necessidade de alterações.
    const mobileMenuButton = document.getElementById("mobile-menu-button");
    const mobileMenu = document.getElementById("mobile-menu");

    if (mobileMenuButton && mobileMenu) {
        mobileMenuButton.addEventListener("click", () => {
            mobileMenu.classList.toggle("is-open");
            const isOpen = mobileMenu.classList.contains("is-open");
            mobileMenuButton.setAttribute("aria-expanded", String(isOpen));
            mobileMenuButton.setAttribute("aria-label", isOpen ? "Fechar menu" : "Abrir menu");
        });
    }
</script>
