---
// src/components/PostCard.astro (Versão final com tags coloridas e todas as melhorias)
import type { CollectionEntry } from 'astro:content';
import { Image } from 'astro:assets';

interface Props {
  post: CollectionEntry<'blog'>;
  isLCP?: boolean;
  showDate?: boolean;
  tagLimit?: number;
}

const { post, isLCP = false, showDate = true, tagLimit = Infinity } = Astro.props;

// 1. Definimos um array com os nomes das classes de cor que vamos usar
const tagColorClasses = ['tag-turquoise', 'tag-violet', 'tag-pink'];
---

<div class="post-card">
    <a href={`/blog/${post.slug}/`} class="card-link-area" aria-label={`Ler mais sobre ${post.data.title}`}>
        <div class="image-container">
            {post.data.heroImage && (
                <Image
                    src={post.data.heroImage}
                    alt={`Imagem de capa para o post: ${post.data.title}`}
                    quality={75}
                    loading={isLCP ? 'eager' : 'lazy'}
                    fetchpriority={isLCP ? 'high' : 'auto'}
                    class="post-image"
                    widths={[320, 480, 800, 1200]}
                    sizes="(max-width: 639px) 90vw, (max-width: 1023px) 45vw, 30vw"
                />
            )}
        </div>
        <div class="post-text">
            <h2 class="post-title">{post.data.title}</h2>

            {showDate && (
                <p class="post-date">
                    {new Date(post.data.pubDate).toLocaleDateString('pt-BR', { year: 'numeric', month: 'long', day: 'numeric' })}
                </p>
            )}

            <p class="post-description">{post.data.description}</p>
        </div>
    </a>
    
    {post.data.tags && post.data.tags.length > 0 && (
        <div class="tags-container">
            {/* 2. Adicionamos 'index' ao .map para saber a posição de cada tag */}
            {post.data.tags.slice(0, tagLimit).map((tag, index) => {
                // 3. Calculamos qual classe de cor usar de forma cíclica
                const colorClass = tagColorClasses[index % tagColorClasses.length];
                return (
                    // 4. Aplicamos a classe base 'tag' e a classe de cor dinâmica
                    <a href={`/tags/${String(tag).toLowerCase()}/`} class:list={["tag", colorClass]}>
                        {tag}
                    </a>
                )
            })}
        </div>
    )}
</div>

<style>
    /* Seus estilos existentes para o card principal */
    .post-card {
        background-color: var(--color-bg-dark);
        border-radius: 12px;
        overflow: hidden;
        border: 1px solid transparent;
        display: flex;
        flex-direction: column;
        height: 100%;
        transition: transform 0.3s ease, box-shadow 0.3s ease;
    }
    .post-card:hover {
        transform: translateY(-8px);
        box-shadow: 0 10px 25px rgba(0,0,0,0.2);
        border-color: var(--accent-lilac);
    }
    .card-link-area {
        text-decoration: none;
        color: var(--color-text-primary);
        display: flex;
        flex-direction: column;
        flex-grow: 1;
    }
    .image-container, .post-image, .post-text, .post-title, .post-date, .post-description {
        /* Nenhuma mudança aqui, todos os seus estilos foram mantidos */
        width: 100%; 
        aspect-ratio: 16 / 9; 
        background-color: var(--color-bg); 
        height: 100%; 
        object-fit: cover; 
        padding: 1.5rem 1.5rem 0; 
        flex-grow: 1; 
        font-size: 1.5rem;
        margin: 0 0 0.5rem; 
        color: var(--color-text-secondary); 
        font-size: 0.9rem; 
        margin-bottom: 1rem; 
        font-size: 1rem; 
        margin-bottom: 1rem; 
    }
    
    /* 5. ESTILOS ATUALIZADOS E NOVOS PARA AS TAGS */
    .tags-container {
        display: flex;
        flex-wrap: wrap;
        gap: 0.5rem;
        padding: 0 1.5rem 1.5rem;
    }

    /* Estilo base para todas as tags */
    .tag {
        font-size: 0.75rem;
        padding: 0.25rem 0.75rem;
        color: var(--color-bg);
        border-radius: 999px;
        font-weight: 700;
        text-decoration: none;
        transition: transform 0.2s ease, filter 0.2s ease;
    }
    .tag:hover {
        transform: scale(1.05);
        filter: brightness(1.1);
    }

    /* Estilos específicos para cada cor de tag, usando as variáveis globais */
    .tag.tag-turquoise {
        background-color: var(--accent-turquoise);
    }
    .tag.tag-violet {
        background-color: var(--accent-violet);
    }
    .tag.tag-pink {
        background-color: var(--accent-pink);
    }
</style>