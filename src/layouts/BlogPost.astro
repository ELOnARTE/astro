---
// src/layouts/BlogPost.astro (Versão Final com a fusão das melhorias)

// 1. Mantemos seus imports e adicionamos o PostCard
import type { CollectionEntry } from 'astro:content';
import { Image } from 'astro:assets';
import Comments from '../components/Comments.astro';
import PostCard from '../components/PostCard.astro';

// 2. Usamos a definição de Props completa para receber os novos dados
export interface Props {
    post: CollectionEntry<'blog'>;
    relatedPosts: CollectionEntry<'blog'>[];
    prevPost: { slug: string; title: string } | null;
    nextPost: { slug: string; title: string } | null;
}

// 3. Extraímos todas as props
const { post, relatedPosts, prevPost, nextPost } = Astro.props;
---

<article class="prose">
    <div class="post-header">
        {post.data.heroImage && (
            <Image 
                src={post.data.heroImage} 
                alt={`Imagem para ${post.data.title}`} 
                class="hero-image" 
                width={1200}
                height={675}
                widths={[480, 720, 1200, 1600]}
                sizes="(max-width: 834px) 90vw, 80ch"
            />
        )}
        <h1>{post.data.title}</h1>
        <p class="publish-date">
            Publicado em: {new Date(post.data.pubDate).toLocaleDateString('pt-BR', { year: 'numeric', month: 'long', day: 'numeric' })}
        </p>
        
        {post.data.tags && post.data.tags.length > 0 && (
            <div class="tags-container">
                {post.data.tags.map(tag => (
                    <a href={`/tags/${tag.toLowerCase()}/`} class="tag">{tag}</a>
                ))}
            </div>
        )}
    </div>
    
    <slot /> </article>

<Comments />

<div class="post-footer-container">
    {relatedPosts && relatedPosts.length > 0 && (
        <section class="related-posts">
            <h2>Você também pode gostar de...</h2>
            <div class="related-grid">
                {relatedPosts.map(related => (
                    <PostCard post={related} showDate={false} tagLimit={1} />
                ))}
            </div>
        </section>
    )}

    <nav class="post-navigation">
        {prevPost ? (
            <a href={`/blog/${prevPost.slug}/`} class="nav-link prev">
                <span class="label">Anterior</span>
                <span class="nav-title">{prevPost.title}</span>
            </a>
        ) : <div />}
        
        {nextPost ? (
            <a href={`/blog/${nextPost.slug}/`} class="nav-link next">
                <span class="label">Próximo</span>
                <span class="nav-title">{nextPost.title}</span>
            </a>
        ) : <div />}
    </nav>
</div>


<style>
    /* 7. Mantemos TODOS os seus estilos existentes */
    .prose { max-width: 80ch; margin: auto; padding: 2rem 1.5rem 4rem; }
    .post-header { text-align: center; margin-bottom: 2rem; border-bottom: 1px solid var(--color-bg-light); padding-bottom: 2rem; }
    .hero-image { width: 100%; height: auto; border-radius: 12px; margin-bottom: 2rem; box-shadow: 0 8px 25px rgba(0,0,0,0.2); }
    .post-header h1 { font-size: 2.5rem; line-height: 1.2; margin-bottom: 1rem; color: var(--color-text-primary); }
    .publish-date { color: var(--color-text-secondary); font-style: italic; }
    .tags-container { display: flex; flex-wrap: wrap; justify-content: center; gap: 0.75rem; margin-top: 1.5rem; }
    .tag { font-size: 0.8rem; padding: 0.3rem 1rem; background-color: var(--color-bg-light); color: var(--color-text-secondary); border: 1px solid var(--color-bg-form); border-radius: 999px; text-decoration: none; transition: all 0.2s ease; }
    .tag:hover { background-color: var(--accent-lilac); border-color: var(--accent-lilac); color: white; }

    /* --- ADICIONAMOS os novos estilos abaixo dos existentes --- */
    .post-footer-container {
        max-width: 1100px;
        margin: 0 auto;
        padding: 0 1.5rem;
    }

    .related-posts {
        margin-top: 4rem;
        padding-top: 2rem;
        border-top: 1px solid var(--color-bg-light);
    }
    .related-posts h2 {
        text-align: center;
        font-size: 1.75rem;
        margin-bottom: 2rem;
    }
    .related-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
        gap: 1.5rem;
    }

    .post-navigation {
        display: flex;
        justify-content: space-between;
        gap: 1rem;
        margin-top: 4rem;
        padding-top: 2rem;
        border-top: 1px solid var(--color-bg-light);
    }
    .nav-link {
        display: flex;
        flex-direction: column;
        padding: 1rem;
        border: 1px solid var(--color-bg-light);
        border-radius: 8px;
        text-decoration: none;
        color: var(--color-text-primary);
        transition: background-color 0.3s ease, border-color 0.3s ease;
        flex-basis: 48%;
    }
    .nav-link:hover {
        background-color: var(--color-bg-light);
        border-color: var(--accent-turquoise);
    }
    .nav-link .label {
        font-size: 0.875rem;
        color: var(--color-text-secondary);
        margin-bottom: 0.5rem;
    }
    .nav-link .nav-title {
        font-weight: 700;
    }
    .nav-link.next {
        text-align: right;
    }
</style>